/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Upgrade, UpgradeInterface } from "../../contracts/Upgrade";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isTestTrue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051610aae61004b6000396000818160ef01528181610138015281816101ce0152818161020e01526102980152610aae6000f3fe60806040526004361061004a5760003560e01c806312af53001461004f5780633659cfe6146100785780634f1ef2861461009a57806352d1902d146100ad5780638129fc1c146100d0575b600080fd5b34801561005b57600080fd5b506065546040516001909116151581526020015b60405180910390f35b34801561008457600080fd5b5061009861009336600461081a565b6100e5565b005b6100986100a836600461084b565b6101c4565b3480156100b957600080fd5b506100c261028b565b60405190815260200161006f565b3480156100dc57600080fd5b5061009861033e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101365760405162461bcd60e51b815260040161012d9061090d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661017f600080516020610a32833981519152546001600160a01b031690565b6001600160a01b0316146101a55760405162461bcd60e51b815260040161012d90610959565b604080516000808252602082019092526101c191839190610453565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361020c5760405162461bcd60e51b815260040161012d9061090d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610255600080516020610a32833981519152546001600160a01b031690565b6001600160a01b03161461027b5760405162461bcd60e51b815260040161012d90610959565b61028782826001610453565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461032b5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161012d565b50600080516020610a3283398151915290565b600054610100900460ff161580801561035e5750600054600160ff909116105b806103785750303b158015610378575060005460ff166001145b6103db5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161012d565b6000805460ff1916600117905580156103fe576000805461ff0019166101001790555b6065805460ff1916600117905580156101c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561048b57610486836105c3565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156104e5575060408051601f3d908101601f191682019092526104e2918101906109a5565b60015b6105485760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161012d565b600080516020610a3283398151915281146105b75760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161012d565b5061048683838361065f565b6001600160a01b0381163b6106305760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161012d565b600080516020610a3283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6106688361068a565b6000825111806106755750805b156104865761068483836106ca565b50505050565b610693816105c3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6107325760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161012d565b600080846001600160a01b03168460405161074d91906109e2565b600060405180830381855af49150503d8060008114610788576040519150601f19603f3d011682016040523d82523d6000602084013e61078d565b606091505b50915091506107b58282604051806060016040528060278152602001610a52602791396107be565b95945050505050565b606083156107cd5750816107f7565b8251156107dd5782518084602001fd5b8160405162461bcd60e51b815260040161012d91906109fe565b9392505050565b80356001600160a01b038116811461081557600080fd5b919050565b60006020828403121561082c57600080fd5b6107f7826107fe565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561085e57600080fd5b610867836107fe565b9150602083013567ffffffffffffffff8082111561088457600080fd5b818501915085601f83011261089857600080fd5b8135818111156108aa576108aa610835565b604051601f8201601f19908116603f011681019083821181831017156108d2576108d2610835565b816040528281528860208487010111156108eb57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156109b757600080fd5b5051919050565b60005b838110156109d95781810151838201526020016109c1565b50506000910152565b600082516109f48184602087016109be565b9190910192915050565b6020815260008251806020840152610a1d8160408501602087016109be565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220168afd931002895fa56908362728fb4ba7b793ba38ec994550fda11bf1faec0264736f6c63430008100033";

type UpgradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Upgrade__factory extends ContractFactory {
  constructor(...args: UpgradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Upgrade> {
    return super.deploy(overrides || {}) as Promise<Upgrade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Upgrade {
    return super.attach(address) as Upgrade;
  }
  override connect(signer: Signer): Upgrade__factory {
    return super.connect(signer) as Upgrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeInterface {
    return new utils.Interface(_abi) as UpgradeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Upgrade {
    return new Contract(address, _abi, signerOrProvider) as Upgrade;
  }
}
